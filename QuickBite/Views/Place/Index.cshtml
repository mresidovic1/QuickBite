@model IEnumerable<QuickBite.Models.UsluznaJedinica>

@{
    ViewData["Title"] = "Index";
}


<style>
    /* Globalni stilovi */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    min-height: 100vh;
    background: #FFFFFF;
}

.container {
    max-width: 1200px;
    width: 95%;
    padding: 0 10px;
}

.slider-wrapper {
    position: relative;
}

/* Gornja traka */
.top-bar {
    width: 100%;
    background: #66CDAA;
    padding: 20px;
    text-align: left;
}

.top-bar .logo {
    color: white;
    font-size: 24px;
    font-weight: bold;
}

.slider-wrapper .slide-button {
    position: absolute;
    top: 50%;
    height: 50px;
    width: 50px;
    color: #fff;
    border: none;
    outline: none;
    background: #66CDAA;
    font-size: 2.2rem;
    cursor: pointer;
    border-radius: 50%;
    transform: translateY(-50%);
}

.slider-wrapper .slide-button:hover {
    background: #66CDAA;
}

.slider-wrapper .slide-button#prev-slide {
    left: -20px;
    display: none;
}

.slider-wrapper .slide-button#next-slide {
    right: -20px;
}

.slider-wrapper .image-list {
    display: flex; 
    justify-content: center; 
    align-items: center;
    gap: 18px;
    font-size: 0;
    margin-top: 30px;
    overflow-x: auto;
    scrollbar-width: none;
}

.slider-wrapper .image-list::-webkit-scrollbar {
    display: none;
}

.slider-wrapper .image-list .image-item {
    width: 300px; 
    height: auto;
    object-fit: cover;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.slider-wrapper .image-list .image-item .responsive {
    width: 100%; 
    height: auto;
}

.slider-wrapper .image-list .image-item .caption {
    margin-top: 10px;
    font-size: 1rem;
    color: #333;
}


.slider-scrollbar {
    height: 24px;
    width: 100%;
    display: flex;
    align-items: center;
}

.slider-scrollbar .scrollbar-track {
    height: 2px;
    width: 100%;
    background: #ccc;
    position: relative;
    border-radius: 4px;
}

.slider-scrollbar:hover .scrollbar-track {
    height: 4px;
}

.slider-scrollbar .scrollbar-thumb {
    position: absolute;
    height: 2px;
    width: 50%;
    background: #66CDAA;
    border-radius: inherit;
    cursor: grab;
}

.slider-scrollbar .scrollbar-thumb:active {
    cursor: grabbing;
    height: 8px;
    top: -2px;
}

.slider-scrollbar .scrollbar-thumb::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    top: -10px;
    bottom: -10px;
}

media (max-width: 1023px) {
    .slider-wrapper .slide-button {
        display: none !important;
    }

    .slider-wrapper .image-list {
        gap: 10px;
        margin-top: 15px;
    }
}

media (max-width: 768px) {
    .slider-wrapper .image-list .image-item {
        width: 200px; 
        height: auto;
    }
}


.bottom-bar {
    width: 100%;
    background: #66CDAA;
    padding: 10px;
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

.bottom-bar .back-button {
    color: white;
    font-size: 2.2rem;
    background: none;
    border: none;
    cursor: pointer;
}
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Restorani</title>
    <link rel="stylesheet" href="stylee.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,0,0">
    <script src="script.js" defer></script>
</head>
<body>
     <!-- Gornja traka -->
     <div class="top-bar">
        <div class="logo">QuickBite</div>
    </div>


    <div class="container">
        <div class="slider-scrollbar">
            <div class="scrollbar-track">
                <div class="scrollbar-thumb"></div>
            </div>
        </div>
        <div class="slider-wrapper">
            <button id="prev-slide" class="slide-button material-symbols-rounded">chevron_left</button>
            <div class="image-list">
                <div class="image-item">
                    <img src="images/img-1.jpg" alt="img-1" class="image-item responsive">
                    <div class="caption">Ćevabdžinica Hodžić</div>
                </div>
                <div class="image-item">               
                     <img src="images/img-2.jpg" alt="img-2" class="image-item responsive">
                     <div class="caption"><br>Metropolis</div>
                    </div>
            
                    <div class="image-item">
                <img src="images/img-9.jpg" alt="img-9" class="image-item responsive">
                <div class="caption">Arigato sushi bar</div>
                    </div>

                
            </div>
            <button id="next-slide" class="slide-button material-symbols-rounded">chevron_right</button>
        </div>
    </div>

     <div class="bottom-bar">
        <button class="back-button material-symbols-rounded">arrow_back</button>
    </div>
    <script>
        const initSlider = () => {
            const imageList = document.querySelector(".slider-wrapper .image-list");
            const slideButtons = document.querySelectorAll(".slider-wrapper .slide-button");
            const slidersScrollbar = document.querySelector(".container .slider-scrollbar");
            const scrollbarThumb = slidersScrollbar.querySelector(".scrollbar-thumb");
            const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;

            const updateScrollThumbPosition = () => {
                const scrollPosition = imageList.scrollLeft;
                const thumbPosition = (scrollPosition / maxScrollLeft) * (slidersScrollbar.clientWidth - scrollbarThumb.offsetWidth);
                scrollbarThumb.style.left = `${thumbPosition}px`;
            };

            const handleSlideButtons = () => {
                slideButtons[0].style.display = imageList.scrollLeft <= 0 ? "none" : "block";
                slideButtons[1].style.display = imageList.scrollLeft >= maxScrollLeft ? "none" : "block";
            };

            scrollbarThumb.addEventListener("mousedown", (e) => {
                const startX = e.clientX;
                const thumbPosition = scrollbarThumb.offsetLeft;

                const handleMouseMove = (e) => {
                    const deltaX = e.clientX - startX;
                    const newThumbPosition = thumbPosition + deltaX;
                    const maxThumbPosition = slidersScrollbar.clientWidth - scrollbarThumb.offsetWidth;

                    const boundedPosition = Math.max(0, Math.min(maxThumbPosition, newThumbPosition));
                    const scrollPosition = (boundedPosition / maxThumbPosition) * maxScrollLeft;

                    scrollbarThumb.style.left = `${boundedPosition}px`;
                    imageList.scrollLeft = scrollPosition;
                };

                const handleMouseUp = () => {
                    document.removeEventListener("mousemove", handleMouseMove);
                    document.removeEventListener("mouseup", handleMouseUp);
                };

                document.addEventListener("mousemove", handleMouseMove);
                document.addEventListener("mouseup", handleMouseUp);
            });

            slideButtons.forEach(button => {
                button.addEventListener("click", () => {
                    const direction = button.id === "prev-slide" ? -1 : 1;
                    const scrollAmount = imageList.clientWidth * direction;
                    imageList.scrollBy({ left: scrollAmount, behavior: "smooth" });
                });
            });

            imageList.addEventListener("scroll", () => {
                handleSlideButtons();
                updateScrollThumbPosition();
            });

            handleSlideButtons();
            updateScrollThumbPosition();
        };

        window.addEventListener("load", initSlider);
    </script>
</body>
</html>

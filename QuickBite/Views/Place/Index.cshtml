@using QuickBite.Models
@model List<UsluznaJedinica>

@{
    ViewData["Title"] = "Index";
}


<style>
    .index-page * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.index-page body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    min-height: 100vh;
    background: #FFFFFF;
    overflow: hidden; /* Prevent scrolling */
}

.index-page .container {
    max-width: 100%;
    width: 100%;
    padding: 0;
    flex-grow: 1; /* Allow the container to grow and take available space */
}

.index-page .slider-wrapper {
    margin-top: 30px;
    position: relative;
}

.index-page .slider-wrapper .slide-button {
    position: absolute;
    top: 10%;
    height: 50px;
    width: 50px;
    color: #fff;
    border: none;
    outline: none;
    background: #66CDAA;
    font-size: 2.2rem;
    cursor: pointer;
    border-radius: 50%;
    transform: translateY(-50%);
    z-index: 1; /* Ensure buttons are above images */
}

.index-page .slider-wrapper .slide-button:hover {
    background: #66CDAA;
}

.index-page .slider-wrapper .slide-button#prev-slide {
    left: -20px;
    display: none;
}

.index-page .slider-wrapper .slide-button#next-slide {
    right: -20px;
}

.index-page .slider-wrapper .image-list {
    display: flex; 
    justify-content: center; 
    align-items: center;
    gap: 18px;
    font-size: 0;
    margin-top: 50px;
    overflow-x: auto;
    scrollbar-width: none;
    width: 100%; /* Ensure images take full width */
}

.index-page .slider-wrapper .image-list::-webkit-scrollbar {
    display: none;
}

            .index-page .slider-wrapper .image-list .image-item {
                width: 350px; /* Postavite fiksnu širinu za sve image-item */
                height: 360px; /* Postavite fiksnu visinu za sve image-item */
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                text-align: center;
                overflow: hidden;
                position: relative; /* Ensure captions are positioned correctly */
                margin-right: 18px; /* Dodajte razmak između image-item elemenata */
            }

                .index-page .slider-wrapper .image-list .image-item:last-child {
                    margin-right: 0; /* Uklonite razmak za posljednji image-item */
                    overflow: hidden; /* Dodajte overflow kako bi se slike proporcionalno prilagodile */
                }

                .index-page .slider-wrapper .image-list .image-item .responsive {
                    width: 100%;
                    max-height: 100%; /* Postavite maksimalnu visinu slike */
                    object-fit: contain; /* Prilagodite sliku unutar granica bez promjene omjera */
                    align-self: center; /* Centriranje vertikalno */
                }


.index-page .slider-wrapper .image-list .image-item .caption {
    margin-top: auto; /* Podešavanje margine za naziv */
    font-size: 1rem;
    font-weight:600;
    color: #333;
    padding: 10px; /* Dodajte prostor između slike i naziva */
    background-color: rgba(255, 255, 255, 0.9); /* Prozirna pozadina za bolju čitljivost */
    width: 100%; /* Postavite širinu naziva na 100% kako bi se prilagodio fiksnoj širini slike */
    box-sizing: border-box; /* Uključite padding u širinu elementa */
    position: absolute; /* Position captions relative to their parent */
    bottom: 0;
    left: 0;
    z-index: 1; /* Ensure captions are above images */
}

.index-page .slider-scrollbar {
    margin: 60px auto 0; /* Center horizontally and add margin-top */
    height: 24px;
    width: 60%; /* Define the width to something less than 100% */
    display: flex;
    align-items: center;
}

.index-page .slider-scrollbar .scrollbar-track {
    height: 2px;
    width: 100%; /* Full width of the parent container */
    background: #ccc;
    position: relative;
    border-radius: 4px;
}

.index-page .slider-scrollbar:hover .scrollbar-track {
    height: 4px;
}

.index-page .slider-scrollbar .scrollbar-thumb {
    position: absolute;
    height: 2px;
    width: 50%;
    background: #66CDAA;
    border-radius: inherit;
    cursor: grab;
}

.index-page .slider-scrollbar .scrollbar-thumb:active {
    cursor: grabbing;
    height: 8px;
    top: -2px;
}

.index-page .slider-scrollbar .scrollbar-thumb::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    top: -10px;
    bottom: -10px;
}

media (max-width: 1023px) {
    .index-page .slider-wrapper .slide-button {
        display: none !important;
    }

    .index-page .slider-wrapper .image-list {
        gap: 10px;
        margin-top: 15px;
    }
}

media (max-width: 768px) {
    .index-page .slider-wrapper .image-list .image-item {
        width: 200px; 
        height: auto;
    }
}

.index-page .bottom-bar {
    width: 100%;
    background: #66CDAA;
    padding: 10px;
    height: 10%;
    display: flex;
    justify-content: flex-start;
    align-items: center; /* Center elements vertically */
    position: fixed; /* Fix the bottom bar to the bottom of the viewport */
    bottom: 0;
    left: 0;
    z-index: 2; /* Ensure the bottom bar is above images and scrollbar */
}

.index-page .bottom-bar .back-button {
    color: white;
    font-size: 2.2rem;
    background: none;
    border: none;
    cursor: pointer;
}
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Restorani</title>
    <link rel="stylesheet" href="stylee.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,0,0">
    <script src="script.js" defer></script>
</head>
<body class="index-page">
    <div class="container">
        <div class="slider-scrollbar">
            <div class="scrollbar-track">
                <div class="scrollbar-thumb"></div>
            </div>
        </div>
        <div class="slider-wrapper">
            <button id="prev-slide" class="slide-button material-symbols-rounded">chevron_left</button>
            <div class="image-list">
                @foreach (var place in Model)
                {
                    <div class="image-item">
                        <a href="@Url.Action("Index", "Items", new { usluznaJedinicaId = place.Id })">
                           <img src="~/images/@(place.Naziv).jpg" alt="@place.Naziv" class="image-item responsive">
                            <div class="caption">@place.Naziv</div>
                        </a> 
                    </div>
                }
            </div>
            <button id="next-slide" class="slide-button material-symbols-rounded">chevron_right</button>
        </div>
    </div>

     <div class="bottom-bar">
        <button class="back-button material-symbols-rounded">arrow_back</button>
    </div>
    <script>
        const initSlider = () => {
            const imageList = document.querySelector(".slider-wrapper .image-list");
            const slideButtons = document.querySelectorAll(".slider-wrapper .slide-button");
            const slidersScrollbar = document.querySelector(".container .slider-scrollbar");
            const scrollbarThumb = slidersScrollbar.querySelector(".scrollbar-thumb");
            const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;

            const updateScrollThumbPosition = () => {
                const scrollPosition = imageList.scrollLeft;
                const thumbPosition = (scrollPosition / maxScrollLeft) * (slidersScrollbar.clientWidth - scrollbarThumb.offsetWidth);
                scrollbarThumb.style.left = `${thumbPosition}px`;
            };

            const handleSlideButtons = () => {
                slideButtons[0].style.display = imageList.scrollLeft <= 0 ? "none" : "block";
                slideButtons[1].style.display = imageList.scrollLeft >= maxScrollLeft ? "none" : "block";
            };

            scrollbarThumb.addEventListener("mousedown", (e) => {
                const startX = e.clientX;
                const thumbPosition = scrollbarThumb.offsetLeft;

                const handleMouseMove = (e) => {
                    const deltaX = e.clientX - startX;
                    const newThumbPosition = thumbPosition + deltaX;
                    const maxThumbPosition = slidersScrollbar.clientWidth - scrollbarThumb.offsetWidth;

                    const boundedPosition = Math.max(0, Math.min(maxThumbPosition, newThumbPosition));
                    const scrollPosition = (boundedPosition / maxThumbPosition) * maxScrollLeft;

                    scrollbarThumb.style.left = `${boundedPosition}px`;
                    imageList.scrollLeft = scrollPosition;
                };

                const handleMouseUp = () => {
                    document.removeEventListener("mousemove", handleMouseMove);
                    document.removeEventListener("mouseup", handleMouseUp);
                };

                document.addEventListener("mousemove", handleMouseMove);
                document.addEventListener("mouseup", handleMouseUp);
            });

            slideButtons.forEach(button => {
                button.addEventListener("click", () => {
                    const direction = button.id === "prev-slide" ? -1 : 1;
                    const scrollAmount = imageList.clientWidth * direction;
                    imageList.scrollBy({ left: scrollAmount, behavior: "smooth" });
                });
            });

            imageList.addEventListener("scroll", () => {
                handleSlideButtons();
                updateScrollThumbPosition();
            });

            handleSlideButtons();
            updateScrollThumbPosition();
        };

        window.addEventListener("load", initSlider);
    </script>
</body>
</html>
